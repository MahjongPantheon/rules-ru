name: Build and publish Rules PDF
on:
  workflow_dispatch:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up release date and fonts
        run: |
          echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
          unzip fonts.zip
      - uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: |
            mkdir /usr/share/fonts/extra_fonts && \
            mv ${GITHUB_WORKSPACE}/fonts/* /usr/share/fonts/extra_fonts/ && \
            fc-cache -fv && \
            (lualatex -synctex=1 -interaction=nonstopmode -shell-escape rules.tex || true) && \
            (lualatex -synctex=1 -interaction=nonstopmode -shell-escape rules.tex || true) # second pass to generate proper ToC
      - name: Add new release tag
        if: always()
        run: |
          git tag release-${{ env.RELEASE_DATE }} && git push origin -f refs/tags/release-${{ env.RELEASE_DATE }}
      - name: Release
        if: always()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ env.RELEASE_DATE }}
          files: rules.pdf
      - name: Make Release Folder
        run: |
          mkdir _site
          mv rules.pdf index.html _site
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
